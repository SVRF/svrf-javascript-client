/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/APIKey', 'model/Body', 'model/Category', 'model/ErrorResponse', 'model/Media', 'model/MediaFiles', 'model/MediaImages', 'model/MediaMetadata', 'model/MediaStereo', 'model/MediaType', 'model/MediaVideos', 'model/StereoscopicType', 'model/SuccessResponse', 'model/AuthResponse', 'model/PaginationResponse', 'model/RateLimitResponse', 'model/SingleMediaResponse', 'model/SearchMediaResponse', 'model/TrendingResponse', 'api/AuthenticateApi', 'api/MediaApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/APIKey'), require('./model/Body'), require('./model/Category'), require('./model/ErrorResponse'), require('./model/Media'), require('./model/MediaFiles'), require('./model/MediaImages'), require('./model/MediaMetadata'), require('./model/MediaStereo'), require('./model/MediaType'), require('./model/MediaVideos'), require('./model/StereoscopicType'), require('./model/SuccessResponse'), require('./model/AuthResponse'), require('./model/PaginationResponse'), require('./model/RateLimitResponse'), require('./model/SingleMediaResponse'), require('./model/SearchMediaResponse'), require('./model/TrendingResponse'), require('./api/AuthenticateApi'), require('./api/MediaApi'));
  }
}(function(ApiClient, APIKey, Body, Category, ErrorResponse, Media, MediaFiles, MediaImages, MediaMetadata, MediaStereo, MediaType, MediaVideos, StereoscopicType, SuccessResponse, AuthResponse, PaginationResponse, RateLimitResponse, SingleMediaResponse, SearchMediaResponse, TrendingResponse, AuthenticateApi, MediaApi) {
  'use strict';

  /**
   * SVRF API client.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var SVRF = require('index'); // See note below*.
   * var xxxSvc = new SVRF.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new SVRF.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new SVRF.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new SVRF.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.5.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The APIKey model constructor.
     * @property {module:model/APIKey}
     */
    APIKey: APIKey,
    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body: Body,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The Media model constructor.
     * @property {module:model/Media}
     */
    Media: Media,
    /**
     * The MediaFiles model constructor.
     * @property {module:model/MediaFiles}
     */
    MediaFiles: MediaFiles,
    /**
     * The MediaImages model constructor.
     * @property {module:model/MediaImages}
     */
    MediaImages: MediaImages,
    /**
     * The MediaMetadata model constructor.
     * @property {module:model/MediaMetadata}
     */
    MediaMetadata: MediaMetadata,
    /**
     * The MediaStereo model constructor.
     * @property {module:model/MediaStereo}
     */
    MediaStereo: MediaStereo,
    /**
     * The MediaType model constructor.
     * @property {module:model/MediaType}
     */
    MediaType: MediaType,
    /**
     * The MediaVideos model constructor.
     * @property {module:model/MediaVideos}
     */
    MediaVideos: MediaVideos,
    /**
     * The StereoscopicType model constructor.
     * @property {module:model/StereoscopicType}
     */
    StereoscopicType: StereoscopicType,
    /**
     * The SuccessResponse model constructor.
     * @property {module:model/SuccessResponse}
     */
    SuccessResponse: SuccessResponse,
    /**
     * The AuthResponse model constructor.
     * @property {module:model/AuthResponse}
     */
    AuthResponse: AuthResponse,
    /**
     * The PaginationResponse model constructor.
     * @property {module:model/PaginationResponse}
     */
    PaginationResponse: PaginationResponse,
    /**
     * The RateLimitResponse model constructor.
     * @property {module:model/RateLimitResponse}
     */
    RateLimitResponse: RateLimitResponse,
    /**
     * The SingleMediaResponse model constructor.
     * @property {module:model/SingleMediaResponse}
     */
    SingleMediaResponse: SingleMediaResponse,
    /**
     * The SearchMediaResponse model constructor.
     * @property {module:model/SearchMediaResponse}
     */
    SearchMediaResponse: SearchMediaResponse,
    /**
     * The TrendingResponse model constructor.
     * @property {module:model/TrendingResponse}
     */
    TrendingResponse: TrendingResponse,
    /**
     * The AuthenticateApi service constructor.
     * @property {module:api/AuthenticateApi}
     */
    AuthenticateApi: AuthenticateApi,
    /**
     * The MediaApi service constructor.
     * @property {module:api/MediaApi}
     */
    MediaApi: MediaApi
  };

  return exports;
}));
