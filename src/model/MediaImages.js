/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SVRF) {
      root.SVRF = {};
    }
    root.SVRF.MediaImages = factory(root.SVRF.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MediaImages model module.
   * @module model/MediaImages
   * @version 1.4.0
   */

  /**
   * Constructs a new <code>MediaImages</code>.
   * Resized &#x60;jpeg&#x60; stills of the Media. For &#x60;video&#x60;, these will be stills from 1/3 of the video&#39;s duration. Resolutions larger than the original size will not be included (the original is included as &#x60;max&#x60;). For stereoscopic content, this will be a monoscopic version of the top or left channel.
   * @alias module:model/MediaImages
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>MediaImages</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MediaImages} obj Optional instance to populate.
   * @return {module:model/MediaImages} The populated <code>MediaImages</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('136')) {
        obj['136'] = ApiClient.convertToType(data['136'], 'String');
      }
      if (data.hasOwnProperty('540')) {
        obj['540'] = ApiClient.convertToType(data['540'], 'String');
      }
      if (data.hasOwnProperty('720')) {
        obj['720'] = ApiClient.convertToType(data['720'], 'String');
      }
      if (data.hasOwnProperty('1080')) {
        obj['1080'] = ApiClient.convertToType(data['1080'], 'String');
      }
      if (data.hasOwnProperty('4096')) {
        obj['4096'] = ApiClient.convertToType(data['4096'], 'String');
      }
      if (data.hasOwnProperty('8192')) {
        obj['8192'] = ApiClient.convertToType(data['8192'], 'String');
      }
      if (data.hasOwnProperty('1080Watermarked')) {
        obj['1080Watermarked'] = ApiClient.convertToType(data['1080Watermarked'], 'String');
      }
      if (data.hasOwnProperty('720x405')) {
        obj['720x405'] = ApiClient.convertToType(data['720x405'], 'String');
      }
      if (data.hasOwnProperty('720x540')) {
        obj['720x540'] = ApiClient.convertToType(data['720x540'], 'String');
      }
      if (data.hasOwnProperty('720x720')) {
        obj['720x720'] = ApiClient.convertToType(data['720x720'], 'String');
      }
      if (data.hasOwnProperty('max')) {
        obj['max'] = ApiClient.convertToType(data['max'], 'String');
      }
    }
    return obj;
  }

  /**
   * 136px wide image. This image may be used for thumbnailing.
   * @member {String} 136
   */
  exports.prototype['136'] = undefined;
  /**
   * 540px wide image. This image may be used for thumbnailing.
   * @member {String} 540
   */
  exports.prototype['540'] = undefined;
  /**
   * 720px wide image. This image may be used for thumbnailing.
   * @member {String} 720
   */
  exports.prototype['720'] = undefined;
  /**
   * 1080px wide image. This image should be used for previews or other uses requiring clear resolution at low bandwidth.
   * @member {String} 1080
   */
  exports.prototype['1080'] = undefined;
  /**
   * 4096px wide image. This image should be used on mobile devices, as larger images may cause some devices to crash.
   * @member {String} 4096
   */
  exports.prototype['4096'] = undefined;
  /**
   * The image at a reasonably large resolution that can be used for a better desktop experience.
   * @member {String} 8192
   */
  exports.prototype['8192'] = undefined;
  /**
   * 1080px wide watermarked image. This image should be used for sharing on social media.
   * @member {String} 1080Watermarked
   */
  exports.prototype['1080Watermarked'] = undefined;
  /**
   * A 16:9 image. This image may be used for thumbnailing.
   * @member {String} 720x405
   */
  exports.prototype['720x405'] = undefined;
  /**
   * A 4:3 image. This image may be used for thumbnailing.
   * @member {String} 720x540
   */
  exports.prototype['720x540'] = undefined;
  /**
   * A 1:1 image. This image may be used for thumbnailing.
   * @member {String} 720x720
   */
  exports.prototype['720x720'] = undefined;
  /**
   * The image in its largest available size (the original size). This image should be used in third-party applications for the best experience, except on mobile devices (see `4096`).
   * @member {String} max
   */
  exports.prototype['max'] = undefined;



  return exports;
}));


