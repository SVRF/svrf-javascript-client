/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SVRF) {
      root.SVRF = {};
    }
    root.SVRF.MediaMetadata = factory(root.SVRF.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MediaMetadata model module.
   * @module model/MediaMetadata
   * @version 1.5.0
   */

  /**
   * Constructs a new <code>MediaMetadata</code>.
   * Metadata about the Media
   * @alias module:model/MediaMetadata
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>MediaMetadata</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MediaMetadata} obj Optional instance to populate.
   * @return {module:model/MediaMetadata} The populated <code>MediaMetadata</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('hasBlendShapes')) {
        obj['hasBlendShapes'] = ApiClient.convertToType(data['hasBlendShapes'], 'Boolean');
      }
      if (data.hasOwnProperty('isFaceFilter')) {
        obj['isFaceFilter'] = ApiClient.convertToType(data['isFaceFilter'], 'Boolean');
      }
      if (data.hasOwnProperty('requiresBlendShapes')) {
        obj['requiresBlendShapes'] = ApiClient.convertToType(data['requiresBlendShapes'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * For 3D Media, denotes that this model contains blend shapes, but having to calculate and apply weights to them is not required. These are models like glasses, hats, and billboards that do not react to face movement.
   * @member {Boolean} hasBlendShapes
   */
  exports.prototype['hasBlendShapes'] = undefined;
  /**
   * For 3D Media, denotes that this model can be applied as a Face Filter overlay on a video of a face.
   * @member {Boolean} isFaceFilter
   */
  exports.prototype['isFaceFilter'] = undefined;
  /**
   * For 3D Media, denotes that calculating and applying blend shape weights to this model is _required_ for the correct experience. If your platform cannot detect and calculate blend shape weights you MUST NOT present these models to your users.
   * @member {Boolean} requiresBlendShapes
   */
  exports.prototype['requiresBlendShapes'] = undefined;



  return exports;
}));


